version: 2.1

orbs:
  macos: circleci/macos@2.5.0

executors:
  linux-arm64-executor:
    machine:
      image: ubuntu-2004:current
    resource_class: arm.large
  linux-amd64-executor:
    machine:
      image: ubuntu-2004:current
    resource_class: large
  macos-executor:
    macos:
      xcode: "14.2.0"
    resource_class: macos.m1.medium.gen1
  gcloud-cli:
    description: The official Google Docker image with gcloud SDK and CLI pre-installed.
    docker:
        - image: google/cloud-sdk:latest
        
jobs:
  build-jar:
    docker:
      - image: cimg/clojure:1.11.1
    steps:
      - checkout
      - run:
          name: Build JAR with Leiningen
          command: |
            lein do clean, uberjar
      - persist_to_workspace:
          root: .
          paths:
            - target/*standalone.jar
            - reflection.json
            - resource-config.json

  build-linux-amd64:
    executor: linux-amd64-executor
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Setup GraalVM
          command: |
            sudo apt-get update
            sudo apt-get install build-essential libz-dev zlib1g-dev
            curl https://download.oracle.com/graalvm/22/latest/graalvm-jdk-22_linux-x64_bin.tar.gz | tar -xz
            export GRAALVM_HOME=$PWD/graalvm-jdk-22.0.1+8.1
            export PATH=$GRAALVM_HOME/bin:$PATH
      - run: 
          name: Build Native Image (Linux AMD64)
          command: |
            native-image \
            --no-fallback \
            -jar target/*-standalone.jar \
            -H:Name=cillers-cli-linux-amd64 \
            -H:ReflectionConfigurationFiles=reflection.json \
            -H:ResourceConfigurationFiles=resource-config.json \
            -H:+UnlockExperimentalVMOptions \
            -H:+ReportExceptionStackTraces \
            --report-unsupported-elements-at-runtime \
            --initialize-at-build-time \
            -Dclojure.compiler.direct-linking=true
      - run:
          name: Push Native Image to Google Artifact Registry
          command: |
            echo $GCLOUD_SERVICE_KEY | gcloud auth activate-service-account --key-file=-
            gcloud auth configure-docker
            docker tag cillers-cli-linux-amd64 us-central1-docker.pkg.dev/$GCLOUD_PROJECT_ID/my-repo/cillers-cli-linux-amd64:$CIRCLE_TAG
            docker push us-central1-docker.pkg.dev/$GCLOUD_PROJECT_ID/my-repo/cillers-cli-linux-amd64:$CIRCLE_TAG
      - store_artifacts:
          path: cillers-cli-linux-amd64
          destination: cillers-cli-linux-amd64

  build-linux-arm64:
    executor: linux-arm64-executor
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Setup GraalVM and Build Native Image (Linux ARM64)
          command: |
            sudo apt-get update
            sudo apt-get install build-essential libz-dev zlib1g-dev
            curl https://download.oracle.com/graalvm/22/latest/graalvm-jdk-22_linux-aarch64_bin.tar.gz | tar -xz
            export GRAALVM_HOME=$PWD/graalvm-jdk-22.0.1+8.1
            export PATH=$GRAALVM_HOME/bin:$PATH
            native-image \
            --no-fallback \
            -jar target/*-standalone.jar \
            -H:Name=cillers-cli-linux-arm64 \
            -H:ReflectionConfigurationFiles=reflection.json \
            -H:ResourceConfigurationFiles=resource-config.json \
            -H:+UnlockExperimentalVMOptions \
            -H:+ReportExceptionStackTraces \
            --report-unsupported-elements-at-runtime \
            --initialize-at-build-time \
            -Dclojure.compiler.direct-linking=true
      - run:
          name: Install Google Cloud SDK
          command: |
            echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] http://packages.cloud.google.com/apt cloud-sdk main" | sudo tee -a /etc/apt/sources.list.d/google-cloud-sdk.list
            curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key --keyring /usr/share/keyrings/cloud.google.gpg add -
            sudo apt-get update && sudo apt-get install google-cloud-sdk -y

  build-macos-amd64:
    executor: macos-executor
    steps:
      - attach_workspace:
          at: .
      - macos/install-rosetta
      - run:
          name: Setup GraalVM and Build Native Image (macOS AMD64)
          command: |
            curl https://download.oracle.com/graalvm/22/latest/graalvm-jdk-22_macos-x64_bin.tar.gz | tar -xz
            export GRAALVM_HOME=$PWD/graalvm-jdk-22.0.1+8.1/Contents/Home
            export PATH=$GRAALVM_HOME/bin:$PATH
            native-image \
            --no-fallback \
            -jar target/*-standalone.jar \
            -H:Name=cillers-cli-macos-amd64 \
            -H:ReflectionConfigurationFiles=reflection.json \
            -H:ResourceConfigurationFiles=resource-config.json \
            -H:+UnlockExperimentalVMOptions \
            -H:+ReportExceptionStackTraces \
            --report-unsupported-elements-at-runtime \
            --initialize-at-build-time \
            -Dclojure.compiler.direct-linking=true

  build-macos-arm64:
    executor: macos-executor
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Build Native Image (macOS ARM64)
          command: |
            curl https://download.oracle.com/graalvm/22/latest/graalvm-jdk-22_macos-aarch64_bin.tar.gz | tar -xz
            export GRAALVM_HOME=$PWD/graalvm-jdk-22.0.1+8.1/Contents/Home
            export PATH=$GRAALVM_HOME/bin:$PATH
            native-image \
            --no-fallback \
            -jar target/*-standalone.jar \
            -H:Name=cillers-cli \
            -H:ReflectionConfigurationFiles=reflection.json \
            -H:ResourceConfigurationFiles=resource-config.json \
            -H:+UnlockExperimentalVMOptions \
            -H:+ReportExceptionStackTraces \
            --report-unsupported-elements-at-runtime \
            --initialize-at-build-time \
            -Dclojure.compiler.direct-linking=true
      - run:
          name: Compress The Native Image
          command: |
            gzip cillers-cli
            mv cillers-cli.gz cillers-cli-$CIRCLE_TAG-macos-arm64.gz
            ls
      - persist_to_workspace:
          root: .
          paths:
            - cillers-cli-$CIRCLE_TAG-macos-arm64.gz

  upload-to-gcloud
    executor: gcloud-cli
    steps
      - attach_workspace: 
          at: .
      - run: 
          name: Upload Native Image to Google Artifact Registry
          command: |
            echo $GCLOUD_SERVICE_KEY | gcloud auth activate-service-account --key-file=-
            gcloud config set project ${GOOGLE_PROJECT_ID}
            gsutil cp ./cillers-cli-$CIRCLE_TAG-macos-arm64.gz gs://arched-inkwell-420116/cillers-cli/cillers-cli-$CIRCLE_TAG-macos-arm64.gz

workflows:
  build-and-deploy:
    jobs:
      - build-jar:
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
      - build-linux-amd64:
          requires: 
            - build-jar
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
      - build-linux-arm64:
          requires: 
            - build-jar
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
      - build-macos-amd64:
          requires: 
            - build-jar
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
      - build-macos-arm64:
          requires: 
            - build-jar
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
      - upload-to-gcloud
          requires:
            - build-macos-arm64


